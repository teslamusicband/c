Эта ошибка связана с тем, что Kafka не находит необходимую конфигурацию JAAS для аутентификации, так как переменная `java.security.auth.login.config` не указана. В kRaft Mode необходимо задать JAAS-конфигурацию, чтобы обеспечить аутентификацию с использованием SASL, и правильно определить конфигурацию для брокеров и контроллеров.

### Шаги для исправления

1. **Создайте файл JAAS-конфигурации** (например, `/etc/kafka/kafka_server_jaas.conf`), где будет указана информация для аутентификации брокеров и контроллеров.
2. **Укажите переменную окружения `KAFKA_OPTS`** для Java, чтобы она ссылалась на этот JAAS-файл.
3. **Обновите файл конфигурации `server.properties`**, чтобы явно указать тип механизма аутентификации для контроллеров.

### Пример JAAS-конфигурации `/etc/kafka/kafka_server_jaas.conf`

```properties
KafkaServer {
  org.apache.kafka.common.security.scram.ScramLoginModule required
  username="broker1"
  password="password1";
};

KafkaController {
  org.apache.kafka.common.security.scram.ScramLoginModule required
  username="controller1"
  password="password2";
};
```

### Обновление `KAFKA_OPTS`

Установите переменную окружения `KAFKA_OPTS`, чтобы указать путь к файлу JAAS:

```bash
export KAFKA_OPTS="-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
```

Этот параметр можно добавить в скрипт запуска Kafka, чтобы переменная применялась при каждом запуске.

### Обновление `server.properties`

Внесите следующие изменения в `server.properties`, чтобы указать механизм аутентификации для контроллеров.

#### Пример конфигурации `server.properties`

```properties
# Основные настройки для broker 1
node.id=1
broker.id=1
process.roles=broker,controller
controller.quorum.voters=1@srv1.company.com:9093,2@srv2.company.com:9093,3@srv3.company.com:9093

# Слушатели
listeners=BROKER://srv1.company.com:9094,CONTROLLER://srv1.company.com:9093
advertised.listeners=BROKER://srv1.company.com:9094

# Назначение протоколов безопасности для слушателей
listener.security.protocol.map=BROKER:SASL_SSL,CONTROLLER:SASL_SSL

# Межброкерский слушатель
inter.broker.listener.name=BROKER
controller.listener.names=CONTROLLER

# Настройки SSL и SASL
ssl.keystore.location=/etc/kafka/server.keystore.jks
ssl.keystore.password=password
ssl.truststore.location=/etc/kafka/server.truststore.jks
ssl.truststore.password=password

sasl.enabled.mechanisms=SCRAM-SHA-256,SCRAM-SHA-512
sasl.mechanism.inter.broker.protocol=SCRAM-SHA-256
sasl.mechanism.controller.protocol=SCRAM-SHA-256

# Дополнительные параметры
num.network.threads=3
num.io.threads=8
socket.send.buffer.bytes=102400
socket.receive.buffer.bytes=102400
socket.request.max.bytes=104857600

log.dirs=/opt/kafka_log
num.partitions=3
num.recovery.threads.per.data.dir=1
offsets.topic.replication.factor=3
transaction.state.log.replication.factor=3
transaction.state.log.min.isr=2

log.retention.hours=168
log.segment.bytes=1073741824
log.retention.check.interval.ms=300000

max.partition.fetch.bytes=10485760
message.max.bytes=10485760
max.request.size=10485760
```

### Пояснения

1. **KafkaServer и KafkaController в JAAS-конфигурации** — Обеспечивают разные логины для брокеров и контроллеров.
2. **KAFKA_OPTS** — Указывает путь к файлу JAAS для JVM.
3. **sasl.mechanism.controller.protocol** — Явно указывает аутентификацию для контроллеров.

Эти шаги должны решить проблему отсутствия JAAS-конфигурации.
